# gazelle:ignore
# we are not using gazelle here since it doesn't understand this combination of rules
# TODO: make a wrapper rule that is easier to use and gazelle can understand

load("@rules_python//python:defs.bzl", "py_binary", "py_library")

package(default_visibility = ["//visibility:public"])

load("@rules_rust//rust:defs.bzl", "rust_shared_library")

rust_shared_library(
    name = "example_lib_rs",
    srcs = ["src/example_lib.rs"],
    crate_name = "example_lib",
    deps = [
        "@pyo3",
    ],
)

genrule(
    name = "example_lib_so",
    srcs = [":example_lib_rs"],
    outs = ["example_lib.so"],
    cmd = "cp $< $@",
)

py_library(
    name = "example_lib",
    srcs = ["example.py"],
    data = ["example_lib.so"],
    imports = ["."],
    visibility = ["//:__subpackages__"],
)

# gazelle:resolve py example_lib //pyo3_example:example_lib_so
py_binary(
    name = "example",
    srcs = ["example.py"],
    data = ["example_lib.so"],
    imports = ["."],
    deps = [
        # ":example_lib",
        "@pip//ipdb",
    ],
)
